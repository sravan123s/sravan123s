 
IN GIT HOW DO YOU REVERT A COMMIT THAT HAS ALREADY BEEN PUSHED AND MADE PUBLIC?
Remove or fix the bad file in a new commit and push it to the remote repository.
This is the most natural way to fix an error. Once you have made necessary changes to the file, 
commit it with new commit message”
Create a new commit that undoes all changes that were made in the bad commit.to do this I will use a command
git revert <name of bad commit>

GIT RESET AND GIT REVERT
 git reset HEAD allows you to go back to a previous commit and removes all in the staging area.It will not store the data
 git reset HEAD <file name>
 git reset --soft HEAD~N ==> it will give soft reset of last 20 commits this will leaves the changees in the file but removes the commits 
 git revert creates a new commit with the previous commit that you are reverting back to. 
 Instead of destroying everything back to that commit, you simply make a copy of that and move forward with that commit
 
 
GIT STASH & GIT CONFIG
The git stash command takes your uncommitted changes (both staged and unstaged), saves them away for later use, and then reverts them from your working copy,
which means if iam working in some feature if there is a change in requirement i will give priorihty for the new feature then the old one where iam working 
will be saved in stash memory, i will use git stash apply for getting the data from stash storage for working
git stash -u
git stash show==> to see the stashed things
git stash apply==> it will apply the previous things back 
The git config command is a  function that is used to set Git configuration values like user name and email on a global or local project level
git congig --global user.name "sravan"
git config --global user.email "reddysravansai143@gmail.com"

HOW DO YOU SQUASH LAST N COMMITS INTO A SINGLE COMMIT?
If,m we want to merge 2 or more commits into single commit we will use
git rebase -i HEAD~N here N is no of commits
start edditing the file that in place of pick keep squash 

WHAT IS GIT FAST FORWARD?

WHAT IS GIT BISECT? HOW CAN YOU USE IT TO DETERMINE THE SOURCE OF A (REGRESSION) BUG?
Git bisect is used to find the commit that introduced a bug by using binary search. 
Command for Git bisect is git bisect <subcommand> <options> 
This command uses a binary search algorithm to find which commit in your project’s history introduced a bug.
git bisect start
gitbisect good <commit id>
git bisect bad

GIT MERGE
Mearging takes the contents of a source branch and combine them with a target branch, only traget branch is uploaded in this process 

WHAT IS GIT REBASE? 
git rebase is a command which will merge another branch into the branch where you are currently working, 
and move all of the local commits that are ahead of the rebased branch to the top of the history on that branch.
The command replay the changes made in the feature branch at the tip of master, 
allowing conflicts to be resolved in the process

HOW DO YOU FIND A LIST OF FILES THAT HAS CHANGED IN A PARTICULAR COMMIT?
To get a list files that has changed in a particular commit use command
git diff-tree -r {hash}
Given the commit hash, this will list all the files that were changed or added in that commit. 
The -r flag makes the command list individual files, rather than collapsing them into root directory names only.

HOW DO YOU SETUP A SCRIPT TO RUN EVERY TIME A REPOSITORY RECEIVES NEW COMMITS THROUGH PUSH?
PRE-RECEIVE hook in the destination repository is invoked when commits are pushed to it. 
Any script bound to this hook will be executed before any references are updated. 
This is a useful hook to run scripts that help enforce development policies.
UPDATE hook works in a similar manner to pre-receive hook, and is also triggered before any updates are actually made. 
However, the update hook is called once for every commit that has been pushed to the destination repository.
POST-RECEIVE hook in the repository is invoked after the updates have been accepted into the destination repository. 
This is an ideal place to configure simple deployment scripts, invoke some continuous integration systems, 
dispatch notification emails to repository maintainers, etc.

HOW WILL YOU KNOW IN GIT IF A BRANCH HAS ALREADY BEEN MERGED INTO MASTER?
i will use two commands
git branch –merged==> lists the branches that have been merged 
git branch –no-merged==> lists the branches that have not been merged.

CHERRY-PICK
Cherry picking in Git means to choose a commit from one branch and apply it onto another.

GIT COMMANDS
git branch -d branch name
